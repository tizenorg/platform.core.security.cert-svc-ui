#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

ppTYPE ?= ugapp

CFLAGS ?= -Wall -g
LDFLAGS ?=
ifneq (,$(findstring app,$(TYPE)))
		PKGNAME ?= mgr-app
		PREFIX ?= /opt/apps/mgr-app
		RESDIR ?= /opt/apps/mgr-app/res
		DATADIR ?= /opt/apps/mgr-app/data
else
		PKGNAME ?= libug-setting-manage-certificates-efl
		PREFIX ?= /opt/ug
		RESDIR ?= /opt/ug/res
		DATADIR ?= /opt/ug/res/etc
endif

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0 
	BUILD_TYPE=Debug
else
	CFLAGS += -O2 
	BUILD_TYPE=Release
endif

LDFLAGS += -Wl,--rpath=$(PREFIX)/lib -Wl,--as-needed

CMAKE_BUILD_DIR ?= $(CURDIR)/cmake_build_tmp
CMAKE_CERT_SVC_BUILD_DIR ?= $(CURDIR)/library


configure: configure-stamp
configure-stamp:
	dh_testdir
	# Add here commands to configure the package.
	cd $(CMAKE_CERT_SVC_BUILD_DIR) && cmake .
	mkdir -p $(CMAKE_BUILD_DIR) && cd $(CMAKE_BUILD_DIR) && CFLAGS="$(CFLAGS)" LDFLAGS="$(LDFLAGS)" cmake ../ui/ -DCMAKE_INSTALL_PREFIX="$(PREFIX)" -DCMAKE_BUILD_TYPE="$(BUILD_TYPE)" -DPKGNAME="$(PKGNAME)" -DTYPE="$(TYPE)"
	touch $(CMAKE_BUILD_DIR)/configure-stamp
	touch $(CMAKE_CERT_SVC_BUILD_DIR)/configure-stamp

build: build-stamp
build-stamp: configure-stamp
	dh_testdir

	# Add here commands to compile the package.
	cd $(CMAKE_CERT_SVC_BUILD_DIR) && $(MAKE)
	cd $(CMAKE_BUILD_DIR) && $(MAKE)
    
	for f in `find $(CURDIR)/debian/ -name "$(PREFIX)*.in"`; do \
		cat $$f > $${f%.in}; \
		sed -i -e "s#@PREFIX@#$(PREFIX)#g" $${f%.in}; \
		sed -i -e "s#@RESDIR@#$(RESDIR)#g" $${f%.in}; \
		sed -i -e "s#@DATADIR@#$(DATADIR)#g" $${f%.in}; \
		sed -i -e "s#@PKGNAME@#$(PKGNAME)#g" $${f%.in}; \
	done

	touch $(CMAKE_BUILD_DIR)/$@
	touch $(CMAKE_CERT_SVC_BUILD_DIR)/$@

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp

    # Add here commands to clean up after the build process.
	rm -rf $(CMAKE_BUILD_DIR)

	for f in `find $(CURDIR)/debian/ -name "*.in"`; do \
		rm -f $${f%.in}; \
	done
	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs

	cd $(CMAKE_BUILD_DIR) && $(MAKE) DESTDIR=$(CURDIR)/debian/tmp install
	cd $(CMAKE_CERT_SVC_BUILD_DIR) && $(MAKE) DESTDIR=$(CURDIR)/debian/tmp install


# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	#dh_installchangelogs 
	#dh_installdocs
	#dh_installexamples
	dh_install --sourcedir=debian/tmp
	#dh_installmenu
	#dh_installdebconf   
	#dh_installlogrotate
	#dh_installemacsen
	#dh_installpam
	#dh_installmime
	#dh_python
	#dh_installinit
	#dh_installcron
	#dh_installinfo
	dh_installman
	dh_link
	#dh_strip --dbg-package=$(PKGNAME)-dbg
	dh_compress
	dh_fixperms
	#dh_perl
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure

